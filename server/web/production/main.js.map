{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.ws.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;ACZA,+DAA+D,+H;;;;;;;;;;;ACA/D,mJAAmJ,SAAS,sB;;;;;;;;;;;;;;;;;;ACAlH;AACG;AAO7C;IAGE,sBAAoB,SAAoB;QAApB,cAAS,GAAT,SAAS,CAAW;QAFjC,UAAK,GAAG,aAAa,CAAC;QAG3B,IAAI,CAAC,SAAS,CAAC,wBAAwB,EAAE,CAAC;IAC5C,CAAC;IALU,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;YACpB,yFAAmC;;SAEpC,CAAC;+EAI+B,yDAAS;OAH7B,YAAY,CAOxB;IAAD,mBAAC;CAAA;AAPwB;;;;;;;;;;;;;;;;;;;;;ACRiC;AACjB;AACI;AACE;AAc/C;IAAA;IAAyB,CAAC;IAAb,SAAS;QAZrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;aACb;YACD,OAAO,EAAE;gBACP,uEAAa;aACd;YACD,SAAS,EAAE;gBACT,yDAAS;aACV;YACD,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;;ACjBtB;AAAA;AAAA;AAAwE;AAaxE;IAAA;IAsCA,CAAC;IAlCG,4CAAwB,GAAxB;QAAA,iBAiCC;QAhCC,IAAI,CAAC,OAAO,GAAG,IAAI,qFAAgB,CAAU;YAC3C,GAAG,EAAE,OAAO,GAAG,QAAQ,CAAC,IAAI,GAAG,MAAM;YACrC,YAAY,EAAE;gBACZ,IAAI,EAAE,UAAC,KAAK;oBACV,sBAAsB;oBACtB,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC;wBACd,IAAI,EAAE,aAAa;qBACtB,CAAC,CAAC;gBACL,CAAC;aACF;SACF,CAAC,CAAC;QAEH,IAAI,CAAC,OAAO;aACT,SAAS,CACR,UAAC,OAAO;YACN,IAAI,OAAO,CAAC,IAAI,KAAK,eAAe,EAAE;gBACpC,IAAI,CAAC,CAAC,KAAI,CAAC,gBAAgB,IAAI,KAAI,CAAC,gBAAgB,KAAK,OAAO,CAAC,GAAG,EAAE;oBACpE,QAAQ,CAAC,MAAM,EAAE,CAAC;iBACnB;qBAAM;oBACL,KAAI,CAAC,gBAAgB,GAAG,OAAO,CAAC,GAAG,CAAC;iBACrC;aACF;QACH,CAAC,EACD,UAAC,GAAG;YACF,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC;YAClB,UAAU,CAAC,cAAM,YAAI,CAAC,wBAAwB,EAAE,EAA/B,CAA+B,EAAE,IAAI,CAAC,CAAC;QAC1D,CAAC,EACD;YACE,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;YAC3B,UAAU,CAAC,cAAM,YAAI,CAAC,wBAAwB,EAAE,EAA/B,CAA+B,EAAE,IAAI,CAAC,CAAC;QAC1D,CAAC,CACF,CAAC;IACN,CAAC;IACL,gBAAC;AAAD,CAAC;;;;;;;;;;;;;;ACnDD;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAC4B;AAE9B;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,KAAK,CAAC,GAAG,CAAC,EAAlB,CAAkB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<div style=\\\"text-align:center\\\">\\n  <h1>\\n    Welcome to {{ title }}\\n  </h1>\\n</div>\\n\\n\"","import { Component } from '@angular/core';\nimport { WSService } from './app.ws.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  public title = 'Home server';\n\n  constructor(private wsService: WSService) {\n    this.wsService.initsocketCommunications();\n  }\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { WSService } from './app.ws.service';\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule\n  ],\n  providers: [\n    WSService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { WebSocketSubject } from 'rxjs/observable/dom/WebSocketSubject';\n\ninterface ServerVersion {\n  type: 'serverVersion';\n  val: string;\n}\n\ninterface GetPropList {\n    type: 'getPropList';\n}\n\ntype Message = ServerVersion | GetPropList;\n\nexport class WSService {\n    private oldServerVersion?: string;\n    private socket$: WebSocketSubject<Message>;\n  \n    initsocketCommunications(): any {\n      this.socket$ = new WebSocketSubject<Message>({\n        url: 'ws://' + location.host + '/web',\n        openObserver: {\n          next: (value) => {\n            // console.log(value);\n            this.socket$.next({\n                type: 'getPropList'\n            });\n          }\n        }\n      });\n  \n      this.socket$\n        .subscribe(\n          (message) => {\n            if (message.type === 'serverVersion') {\n              if (!!this.oldServerVersion && this.oldServerVersion !== message.val) {\n                location.reload();\n              } else {\n                this.oldServerVersion = message.val;\n              }\n            }\n          },\n          (err) => {\n            console.error(err)\n            setTimeout(() => this.initsocketCommunications(), 1000);\n          },\n          () => { \n            console.warn('Completed!');\n            setTimeout(() => this.initsocketCommunications(), 1000);\n          }\n        );\n    }  \n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}